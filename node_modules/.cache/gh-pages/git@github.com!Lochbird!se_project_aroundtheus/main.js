!function(){"use strict";class e{constructor(e,t,s,i,n){let{name:r,link:o,_id:a,isLiked:l}=e,{handleImageClick:d}=s;this._name=r,this._link=o,this._id=a,this._isLiked=l,this._cardSelector=t,this._handleImageClick=d,this._handleDeleteCardSubmit=i,this._toggleLikeCard=n}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardLikeBtn=this._cardElement.querySelector(".card__like-button"),this._cardDeleteBtn=this._cardElement.querySelector(".card__delete-button"),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardElement.querySelector(".card__title").textContent=this._name,this._handleLikes(),this._setEventListeners(),this._cardElement}_setEventListeners(){this._cardLikeBtn.addEventListener("click",(()=>{this._handleLikeClick()})),this._cardDeleteBtn.addEventListener("click",(()=>{this._handleDeleteCardSubmit(this)})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this)}))}toggleLikeButton(){this._cardLikeBtn.classList.toggle("card__like-button_active")}_handleLikeClick(){this._toggleLikeCard(this)}deleteCard(){this._cardElement.remove(),this._cardElement=null}_handleLikes(){this._isLiked?this._cardLikeBtn.classList.add("card__like-button_active"):this._cardLikeBtn.classList.remove("card__like-button_active")}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputElements=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector)}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}_setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}toggleButtonState(){this._hasInvalidInput()?this._disableButton():this._enableButton()}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}}class s{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._renderer=i,this._classElement=t}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._classElement.append(e)}}class i{constructor(e){let{popupElement:t}=e;this._popupElement=t}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}}class n extends i{constructor(e,t){super({popupElement:e}),this._handleFormSubmit=t,this._popupForm=this._popupElement.querySelector(".modal__form"),this._submitButton=this._popupElement.querySelector(".modal__button"),this._submitButtonText=this._submitButton.textContent,this._inputs=this._popupForm.querySelectorAll(".modal__input")}close(){this._popupForm.reset(),super.close()}_getInputValues(){const e={};return this._inputs.forEach((t=>e[t.name]=t.value)),e}setInputValues(e){this._inputs.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}isLoading(e,t){this._submitButton.textContent=e?t:this._submitButtonText}}const r={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},o=document.querySelector("#profile-edit-button"),a=document.querySelector("#edit-profile-modal"),l=document.forms["edit-profile-form"],d=document.querySelector(".profile__title"),c=document.querySelector(".profile__description"),h=document.querySelector(".profile__image"),u=document.querySelector(".profile__image-edit"),_=document.querySelector("#edit-profile-image-modal"),m=document.querySelector("#delete-modal"),p=document.querySelector(".cards__list"),E=document.querySelector("#add-card-modal"),g=document.forms["add-card-modal-form"],b=document.querySelector("#profile-add-button"),f=document.querySelector("#preview-image-modal");function L(t){const s=function(t){return new e(t,"#card-template",{handleImageClick:()=>U.open(t)},k,v).getView()}(t);return S.addItem(s)}function v(e){e._isLiked?C.removeLikeCard(e._id).then((()=>{e.toggleLikeButton()})):C.addLikeCard(e._id).then((()=>{e.toggleLikeButton()}))}function k(e){B.open(),B.setSubmitCallback((()=>{B.isLoading(!0,"Saving..."),C.deleteCard(e).then((()=>{e.deleteCard(),B.close()})).catch((e=>{console.error(e)})).finally((()=>B.isLoading(!1)))}))}o.addEventListener("click",(()=>{w.toggleButtonState();const e=I.getUserInfo();q.setInputValues(e),q.open()})),b.addEventListener("click",(()=>{$.toggleButtonState(),x.open()})),u.addEventListener("click",(()=>{y.open()}));const C=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>this._checkResponse(e)))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>this._checkResponse(e)))}editUserInfo(e){let{title:t,description:s}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})}).then((e=>this._checkResponse(e)))}addCard(e){let{title:t,url:s}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then((e=>this._checkResponse(e)))}deleteCard(e){let{_id:t}=e;return fetch(`${this._baseUrl}/cards/${t}`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}addLikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then((e=>this._checkResponse(e)))}removeLikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}editProfileImage(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>this._checkResponse(e)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"ba6f95f2-7e3a-4192-b9e4-9397fc618de9","Content-Type":"application/json"}});let S;C.getInitialCards().then((e=>{S=new s({items:e,renderer:L},p),S.renderItems()})).catch((e=>{console.error(e)})),C.getUserInfo().then((e=>{C.editUserInfo({title:e.name,description:e.about}),I.setUserInfo(e),I.setProfileImage(e.avatar)})).catch((e=>{console.error(e)}));const y=new n(_,(function(e){y.isLoading(!0,"Saving..."),C.editProfileImage(e.url).then((e=>{I.setProfileImage(e.avatar)})).catch((e=>{console.error(e)})).finally((()=>{y.isLoading(!1),y.close()}))})),I=new class{constructor(e,t,s){this._title=e,this._description=t,this._profileImage=s}getUserInfo(){return{title:this._title.textContent,description:this._description.textContent}}setUserInfo(e){this._title.textContent=e.name,this._description.textContent=e.about}getProfileImage(){return this._profileImage.src}setProfileImage(e){this._profileImage.src=e}}(d,c,h),B=new class extends i{constructor(e,t){super({popupElement:e}),this._submitButton=this._popupElement.querySelector(".modal__button"),this._submitButtonText=this._submitButton.textContent,this._handleDeleteCardSubmit=t}setSubmitCallback(e){this._handleSubmitCallback=e}setEventListeners(){this._submitButton.addEventListener("click",(e=>{e.preventDefault(),this._handleSubmitCallback()})),super.setEventListeners()}isLoading(e,t){this._submitButton.textContent=e?t:this._submitButtonText}}(m,k),q=new n(a,(function(e){q.isLoading(!0,"Saving..."),C.editUserInfo(e).then((e=>{I.setUserInfo(e),q.close()})).catch((e=>{console.error(e)})).finally((()=>q.isLoading(!1)))})),U=new class extends i{constructor(e){super({popupElement:e}),this._imageElement=this._popupElement.querySelector(".card__image"),this._titleElement=this._popupElement.querySelector(".modal__paragraph")}open(e){super.open(),this._imageElement.src=e.link,this._imageElement.alt=e.name,this._titleElement.textContent=e.name}}(f),x=new n(E,(function(e){x.isLoading(!0,"Saving..."),C.addCard(e).then((e=>{L(e)})).catch((e=>{console.error(e)})).finally((()=>{x.close(),x.isLoading(!1)}))})),w=new t(r,l),$=new t(r,g);q.setEventListeners(),y.setEventListeners(),U.setEventListeners(),x.setEventListeners(),B.setEventListeners(),w.enableValidation(),$.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,